<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARRSURBVFhH7ZZ9UNN1HMfX019d5cbREPaoDRw4Qb2wi42Q
        RLIDkwcF0iBRSYykNNO6asHYQDG9uDos7wQ15EEsNowTZAyPiIdEGo/xIJMH06t8SI1AYO++v+3LwR2s
        7uR+/dX77vXHdt/fXu999/n+9uP81xEeeHIhp4jzCH05tyz/kvOYWMsLF6dzT7hn8Xpl2S53ZV8Qsvjd
        0gxujjR9Xuh0mTiDG+2VJZiQ6JzW0rcePGKt0zrp4aeHlhVIoKxYBH+j3EZAlReCqpci2PQsVGcWw+OQ
        S58kgxss0XGj/HIV1rDyQEi1vEj6MQ8QNedhaTr3M+8TIvhXEilBdd5e4AWjJ1ZV++DlGl+8UqtEZH0g
        YhqD4V/gDb/cxdYdLa9ifUXQ3AqQb/P5snwJvE+KIMty7hen84rIt8tZeMCpxuMrwVjAdwqsrfUj8pU2
        eVxTKLY2RyCxJQbJ7XGIqlzjuADAecik5jzqCCLfIM+ejwWZzh1S7TwVh6ynl9riqnvCiRTK9M1xt0Y3
        rkbsxRBsaQ4n8mjsbIvF7s5t2FgVOnsBNdnaikNLK3q+V2M2Ws69CY90p1sL9vMu8DP5j9PLZg0zmM/n
        elrjiXy7ORpv2eRbsa9rB2JN62YvYNAI91l+fB/Dt0ocostWjGm181X0EodhBu65XPnEG+YoJLW9hl0d
        W7C3KxEf9SRjc3XEzAJErqwrCpq4c/0g/okb/WkoP+zVU6IVRDsiXOd8hBm4BPMGJLVuwjsd8dj783Z8
        2LMTKX3vIv7C+pkF9GmC038MvI17v+z+V37tTIDlh6hZOVriD+UpBRm6SDATn9z2OvaQ9R90J+GT3l3Q
        9L1HdiByZoGSVGHxX0MbMVfO1gUhMd/LITGfCq0SHS9PpHlKStX2MDswOhCISUaurGSF2uPyickTVTT9
        dswUGO/3BMMVowytZZvRZUpmldpjAePfalyFtgKGNFGR1cIHw6U8N9y7psXI7wdZpfF0iLV88jhPL1CX
        44Hhq9tYx5glv2yTMzFoRIWMfLyXj4a85WRBHKvc7d8Eg0aST/XMDIgKJvr4uNnkgo4yFZnoGFa53hwC
        sut7qH6qgOW8K4YaVmFkKIJVeipVMGhFL1K97SfIZwqYC91wp3sNRgZDWaWp0Afn1AIe1duG8BRToD5H
        itHBl1in+ojsGlXbwxQYv0wG8Pgi3Cc3IjYZJTeks1qxgart0WuEebebXdBuUJBFSla5YfYlJ0D0MVXb
        wxQYqCIDWLMEY/2+rGKpUpATIAylanv0acKvW4vJALYzBXxYxVzsjjK1m4Cq7SHPAyfrjwkx3ClnnZqj
        gtvMox9V28MUuJTvjVFLJKvct0SgdL/YSLVT0acKv+ksWYLhdiWr3LxoG8AMqp2KPkVoGjQq8Gf7Cla5
        avImBYRRVDsVfYqoYaBmNX77KYxVWs6sQGmqm4xqp1KW8YyA/B8ksE1pmiCMKv8PDYfzN7KFTJOg5d8q
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>